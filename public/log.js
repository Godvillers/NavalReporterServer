// Generated by CoffeeScript 1.12.2
(function() {
  var connect, every, getTurn, progressTimer, runProgressTimer, setProgress, socket;

  every = function(ms, action) {
    return setInterval(action, ms);
  };

  getTurn = function() {
    try {
      return +document.querySelector("#m_fight_log .block_h .block_title").innerText.match(/\d+/)[0];
    } catch (error) {
      return 0;
    }
  };

  setProgress = function(value) {
    var div;
    div = document.querySelector("#turn_pbar .p_bar");
    div.title = "прогресс хода — " + (Math.round(value)) + "%";
    return div.getElementsByTagName("div")[0].style.width = value + "%";
  };

  progressTimer = null;

  runProgressTimer = function() {
    var progress;
    setProgress(progress = 0);
    if (progressTimer != null) {
      clearInterval(progressTimer);
    }
    return progressTimer = every(500, function() {
      setProgress(progress += 2.5);
      if (progress > 100 - 1e-5) {
        clearInterval(progressTimer);
        return progressTimer = null;
      }
    });
  };

  socket = null;

  connect = function() {
    socket = new WebSocket("ws://" + location.host + location.pathname + "/ws");
    socket.onmessage = function(msg) {
      var response, url;
      response = JSON.parse(msg.data);
      if ((url = response.redirect) != null) {
        return location.replace(url);
      } else if (+response.turn > getTurn()) {
        document.getElementById("alls").outerHTML = response.allies;
        document.getElementById("s_map").outerHTML = response.map;
        document.getElementById("m_fight_log").outerHTML = response.log;
        return runProgressTimer();
      }
    };
    return socket.onclose = function() {
      return setTimeout(connect, 3000);
    };
  };

  addEventListener("DOMContentLoaded", function() {
    runProgressTimer();
    return connect();
  });

}).call(this);
