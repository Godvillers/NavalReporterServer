// Generated by CoffeeScript 1.12.2
(function() {
  "use strict";
  var after, animateProgressBar, connect, getTurn, progressTimer, socket;

  after = function(ms, action) {
    return setTimeout(action, ms);
  };

  getTurn = function() {
    try {
      return +document.querySelector("#m_fight_log .block_h .block_title").data.match(/\d+/)[0];
    } catch (error) {
      return 0;
    }
  };

  progressTimer = null;

  animateProgressBar = function(elapsed) {
    var style;
    try {
      style = document.querySelector("#turn_pbar .p_bar div").style;
    } catch (error) {
      return;
    }
    style.transition = "none";
    if (progressTimer != null) {
      clearTimeout(progressTimer);
    }
    return progressTimer = elapsed >= 20 ? (style.width = "100%", null) : (style.width = (elapsed * 5) + "%", after(250, function() {
      style.transition = "width " + (19.75 - elapsed) + "s steps(" + (79 - elapsed * 4) + ", start)";
      style.width = "100%";
      return progressTimer = null;
    }));
  };

  socket = null;

  connect = function() {
    var justConnected;
    socket = new WebSocket("ws://" + location.host + location.pathname + "/ws");
    justConnected = true;
    socket.onmessage = function(msg) {
      var map, response, scrollValue, url;
      response = JSON.parse(msg.data);
      if ((url = response.redirect) != null) {
        location.replace(url);
      } else if (response.turn > getTurn()) {
        document.getElementById("alls").outerHTML = response.allies;
        map = document.getElementById("map_wrap");
        scrollValue = map.scrollLeft / map.scrollWidth;
        document.getElementById("s_map").outerHTML = response.map;
        map = document.getElementById("map_wrap");
        map.scrollLeft = scrollValue * map.scrollWidth;
        document.getElementById("m_fight_log").outerHTML = response.log;
        animateProgressBar(justConnected ? response.ago : 0);
      }
      return justConnected = false;
    };
    return socket.onclose = function() {
      return setTimeout(connect, 3000);
    };
  };

  addEventListener("DOMContentLoaded", function() {
    animateProgressBar(updatedAgo);
    return connect();
  });

}).call(this);
