// Generated by LiveScript 1.5.0
(function(){
  "use strict";
  var every, timeIt, decompress, getTurn, setProgress, progressTimer, runProgressTimer, socket, connect;
  every = function(ms, action){
    return setInterval(action, ms);
  };
  timeIt = function(title, action){
    console.time(title);
    try {
      return action();
    } finally {
      console.timeEnd(title);
    }
  };
  decompress = window.TextDecoder != null
    ? function(data){
      return new TextDecoder('utf-8').decode(pako.inflate(data));
    }
    : function(data){
      return pako.inflate(data, {
        to: 'string'
      });
    };
  getTurn = function(){
    var e;
    try {
      return +/\d+/.exec(document.querySelector('#m_fight_log .block_h .block_title').textContent)[0];
    } catch (e$) {
      e = e$;
      return 0;
    }
  };
  setProgress = function(value){
    try {
      document.querySelector('#turn_pbar .p_bar div').style.width = value + "%";
    } catch (e$) {}
  };
  progressTimer = null;
  runProgressTimer = function(ago){
    var basePoint, that;
    basePoint = Date.now();
    if ((that = progressTimer) != null) {
      clearInterval(that);
    }
    setProgress(Math.min(ago *= 5, 100));
    progressTimer = every(250, function(){
      var progress;
      if ((progress = ago + (Date.now() - basePoint) * 5e-3) < 100 - 1e-5) {
        setProgress(progress);
      } else {
        setProgress(100);
        clearInterval(progressTimer);
        progressTimer = null;
      }
    });
  };
  socket = null;
  connect = function(){
    var justConnected;
    socket = new WebSocket("ws://" + location.host + location.pathname + "/ws");
    justConnected = true;
    socket.binaryType = 'arraybuffer';
    socket.onmessage = function(msg){
      var response, that, map, scrollValue;
      response = timeIt("Decompression", function(){
        return decompress(msg.data);
      });
      response = timeIt("JSON decoding", function(){
        return JSON.parse(response);
      });
      if ((that = response.redirect) != null) {
        location.replace(that);
      } else if (response.turn > getTurn()) {
        document.getElementById('alls').outerHTML = response.allies;
        map = document.getElementById('map_wrap');
        scrollValue = map.scrollLeft / map.scrollWidth;
        document.getElementById('s_map').outerHTML = response.map;
        map = document.getElementById('map_wrap');
        map.scrollLeft = scrollValue * map.scrollWidth;
        document.getElementById('m_fight_log').outerHTML = response.log;
        runProgressTimer(justConnected ? response.ago : 0);
      }
      justConnected = false;
    };
    socket.onclose = function(){
      setTimeout(connect, 3000);
    };
  };
  addEventListener('DOMContentLoaded', function(){
    runProgressTimer(updatedAgo);
    connect();
  });
}).call(this);
